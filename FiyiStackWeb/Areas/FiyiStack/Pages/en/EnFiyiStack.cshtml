@page "/en/FiyiStack"
@model FiyiStackWeb.Areas.FiyiStack.Products.Pages.FiyiStackModel
@{
    Layout = "_Layout";
}
<div class="container">
    <div class="row mt-5 pt-5">
        <!-- Title -->
        <div class="col-lg-8 mx-auto text-center my-5">
            <h3 class="display-4">FiyiStack</h3>
            <h5><span class="badge badge-lg badge-success">The C# low-code generator</span></h5>
        </div>
    </div>
</div>
<div class="container">
    <div class="row">
    <div class="col mr-auto text-left mt-4">
        <div class="card bg-default">
            <div class="card-body">
                <h5 class="card-title text-white">Table of contents</h5>
                <div class="row">
                    <div class="col-8">
                        <ol class="text-white">
                            <li class="mt-2"><a class="text-white" href="#1">Login form</a></li>
                            <li class="mt-2"><a class="text-white" href="#2">Project form</a></li>
                            <li class="mt-2"><a class="text-white" href="#3">Generator form</a></li>
                            <li class="mt-2"><a class="text-white" href="#4">Configuration form</a></li>
                            <li class="mt-2"><a class="text-white" href="#5">Example pages</a></li>
                        </ol>
                    </div>
                    <div class="col-4 d-none d-lg-inline d-xl-inline">
                        <img src="/img/FiyiStack/FiyiStackImageTransparent.png" width="130" alt="Logo" />
                    </div>
                </div>
            </div>
        </div>
        <!-- Login form -->
        <div id="1" class="card bg-default shadow border-0">
            <img src="/img/FiyiStack/FiyiStackApp-LoginForm.png" class="card-img-top">
            <blockquote class="card-blockquote">
                <svg preserveAspectRatio="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 583 95" class="svg-bg">
                    <polygon points="0,52 583,95 0,95" class="fill-default"></polygon>
                    <polygon points="0,42 583,95 683,0 0,95" opacity=".2" class="fill-default"></polygon>
                </svg>
                <h4 class="display-4 text-white">Login form</h4>
                <p class="lead text-italic text-white">
                  Here you enter your credentials to access the application.
                </p>
            </blockquote>
        </div>
        <!-- Project form -->
        <div id="2" class="card bg-default shadow border-0">
            <img src="/img/FiyiStack/FiyiStackApp-ProjectsForm.png" class="card-img-top">
            <blockquote class="card-blockquote">
                <svg preserveAspectRatio="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 583 95" class="svg-bg">
                    <polygon points="0,52 583,95 0,95" class="fill-default"></polygon>
                    <polygon points="0,42 583,95 683,0 0,95" opacity=".2" class="fill-default"></polygon>
                </svg>
                <h4 class="display-4 text-white">Project form</h4>
                <p class="lead text-italic text-white">
                  In this form you can create or edit your projects.
                </p>
                <ol class="text-white">
                    <li class="mt-2">Here you can load your saved projects.</li>
                    <li class="mt-2">Here you can edit your new or saved project putting your 
                        <span class="badge badge-danger">Project name</span>, a 
                        <span class="badge badge-danger">General history user</span>, used to save information related
                        to the requirements of your clients, and the folder <span class="badge badge-danger">Path</span>
                        of the project.
                    </li>
                    <li class="mt-2">This button is used to load a refreshed proyect, with all inputs in
                        <span class="badge badge-danger">2</span> in blank.
                    </li>
                    <li class="mt-2">These buttons are used to delete and filter projects.</li>
                </ol>
                <div class="alert alert-warning alert-dismissible fade show" role="alert">
                    <span class="alert-inner--icon"><i class="ni ni-bell-55"></i></span>
                    <span class="alert-inner--text">Remember that the folder path
                    has to point to the Startup.cs file of the project</span>
                </div>
            </blockquote>
        </div>
        <!-- Generator form -->
        <div id="3" class="card bg-default shadow border-0">
            <img src="/img/FiyiStack/FiyiStackApp-GeneratorForm.gif" class="card-img-top">
            <blockquote class="card-blockquote">
                <svg preserveAspectRatio="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 583 95" class="svg-bg">
                    <polygon points="0,52 583,95 0,95" class="fill-default"></polygon>
                    <polygon points="0,42 583,95 683,0 0,95" opacity=".2" class="fill-default"></polygon>
                </svg>
                <span class="badge badge-pill badge-success">GIF Image above</span>
                <h4 class="display-4 text-white">Generator form</h4>
                <p class="lead text-italic text-white">
                  Here is the main part of the generator.
                </p>
                <ol class="text-white">
                    <li class="mt-2">Here there are 3 parts, the <span class="badge badge-danger">Databases</span>, 
                        their <span class="badge badge-danger">Tables</span>, and the 
                        <span class="badge badge-danger">Columns</span> of each table. You can navigate between each
                        of them to see each of the contents. For example, selecting the Databases option displays a list
                        of databases <span class="badge badge-danger">2</span> and their corresponding information 
                        <span class="badge badge-danger">3</span> on the right.
                    </li>
                    <li class="mt-2">Here the project databases are displayed. You can add what you want.</li>
                    <li class="mt-2">Here the information of each database appears. The 
                        <span class="badge badge-danger">Name</span>, the option if it is
                        <span class="badge badge-danger">Microsoft SQL Server</span> (only option at the moment), and the
                        <span class="badge badge-danger">Connection string</span>. As you can see, the database is local
                        because the data source is a dot (.). 
                        <div class="alert alert-warning alert-dismissible fade show my-3" role="alert">
                            <span class="alert-inner--icon"><i class="ni ni-bell-55"></i></span>
                            <span class="alert-inner--text">Remember, the database Name must be the same as the one placed in the
                                Connection string (initial catalog property)</span>
                        </div>
                    </li>
                    <li class="mt-2">These buttons are for delete the selected databases and add 
                        a new database.</li>
                    <li class="mt-2">This button is to enter the generator configuration.</li>
                    <li class="mt-2">This button is to generate the selected tables
                        <span class="badge badge-danger">7</span>.
                    </li>
                    <li class="mt-2">Here is a list of the tables corresponding to the selected database. 
                        As you can see, each table has a schema in the database as <u>dbo</u>, an area as
                        <u>BasicCore</u> and the name of the table as <u>Failure</u>: 
                        <u>[dbo].[BasicCore.Failure]</u>, to give an example.
                    </li>
                    <li class="mt-2">Here are the data of a selected table. For example, if I select
                        <u>[dbo].[BasicCore.Failure]</u>, the table <span class="badge badge-danger">Name</span> 
                        will be Failure, the <span class="badge badge-danger">Database Scheme</span> will be dbo, and the 
                        <span class="badge badge-danger">Area</span> will be BasicCore. You can also
                        add the <span class="badge badge-danger">Version</span> to be able to have different versions of
                        the table, I, for example, put 1.
                         <div class="alert alert-info alert-dismissible fade show my-3" role="alert">
                            <span class="alert-inner--icon"><i class="ni ni-bell-55"></i></span>
                            <span class="alert-inner--text">There are several types
                        of schemas in the databases, the one that is recommended is dbo (database owner)</span>
                        </div>
                        <div class="alert alert-info alert-dismissible fade show my-3" role="alert">
                            <span class="alert-inner--icon"><i class="ni ni-bell-55"></i></span>
                            <span class="alert-inner--text">Place a name, an area and a version without spaces or
                        special characters, just text and numbers. And if you can, put the first letter capitalized.
                        It's a good practice</span>
                        </div>
                    </li>
                    <li class="mt-2">These buttons are for removing selected tables, selecting all tables, 
                        and for adding a new table.
                    </li>
                    <li class="mt-2">Once you select a table you can go to the Columns tab to add the columns
                        of the selected table, they will be displayed in the list of columns.
                    </li>
                    <li class="mt-2">Here the configuration of each column is shown. If I select the Message
                        column, it will show Message as a <span class="badge badge-danger">Name</span>, the
                        <span class="badge badge-danger">Nullable</span> option indicating whether the
                        column allows null values or not, a <span class="badge badge-danger">History user</span> 
                        indicating what the column is for, and a <span class="badge badge-danger">Data type</span> 
                        <span class="badge badge-danger">13</span>. For example, Message has the data type Text: TextArea,
                        this option displays other options to the right, the <span class="badge badge-danger">Min</span>  
                        and <span class="badge badge-danger">Max</span>  number of characters that the column allows, and
                        also a regular expression, <span class="badge badge-danger">Regex</span> , to filter  which
                        characters are allowed by the column.
                        <div class="alert alert-info alert-dismissible fade show my-3" role="alert">
                            <span class="alert-inner--icon"><i class="ni ni-bell-55"></i></span>
                            <span class="alert-inner--text">Here is the same: Place a name without spaces or
                        special characters, just text and numbers. And if you can, put the first letter capitalized.
                        It's a good practice</span>
                        </div>
                    </li>
                    <li class="mt-2">These buttons are for removing columns, selecting all columns, 
                        and for adding a new column.
                    </li>
                    <li class="mt-2">This dropdown option allows you to add columns with different data types, for example,
                        you can add:
                        <ul>
                            <li class="mt-2">Boolean. To save 1 and 0 values. Used for example for IsActive, 
                                IsOnline or WantDiscount columns.</li>

                            <li class="mt-4">Date and time</li>
                            <li class="mt-2">Time</li>

                            <li class="mt-4">Decimal</li>
                            <li class="mt-2">Integer</li>

                            <li class="mt-4">Primary Key. This one is for the primary key of a table. Each table has
                                a primary key and don't accept zero or null values.
                            </li>
                            <li class="mt-2">Foreign keys with dropdowns</li>
                            <li class="mt-2">Foreign keys with options</li>

                            <li class="mt-4">Text: Basic</li>
                            <li class="mt-2">Text: Email</li>
                            <li class="mt-2">Text: File. Path files are saved in databases as text.</li>
                            <li class="mt-2">Text: Hex colour</li>
                            <li class="mt-2">Text: Password</li>
                            <li class="mt-2">Text: Phone number</li>
                            <li class="mt-2">Text: Tag. A tag example is Paris,Roma,Buenos Aires,London.</li>
                            <li class="mt-2">Text: Text Area</li>
                            <li class="mt-2">Text: Text Editor</li>
                            <li class="mt-2">Text: URL</li>
                            
                        </ul>
                    </li>
                </ol>
            </blockquote>
        </div>
        <!-- Configuration form -->
        <div id="4" class="card bg-default shadow border-0">
            <img src="/img/FiyiStack/FiyiStackApp-ConfigurationForm.gif" class="card-img-top">
            <blockquote class="card-blockquote">
                <svg preserveAspectRatio="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 583 95" class="svg-bg">
                    <polygon points="0,52 583,95 0,95" class="fill-default"></polygon>
                    <polygon points="0,42 583,95 683,0 0,95" opacity=".2" class="fill-default"></polygon>
                </svg>
                <span class="badge badge-pill badge-success">GIF Image above</span>
                <h4 class="display-4 text-white">Configuration form</h4>
                <p class="lead text-italic text-white">
                  Here you can configure the generator
                </p>
                <ol class="text-white">
                    <li class="mt-2">Here there are 3 options to configure the generator, the first is about
                        the <span class="badge badge-danger">database</span>, the second is the
                        <span class="badge badge-danger">paths</span> of the files, and the third is 
                        the <span class="badge badge-danger">interface</span> with which we generate (deprecated).
                    </li>
                    <li class="mt-2">This edit button is to save the selected configuration.</li>
                    <li class="mt-2">With this button you can create the necessary files and folders 
                        for the project:
                        <ul>
                            <li class="mt-2">File: <u>Startup.cs</u>. This file is in charge of starting your project,
                                it loads the configurations and services necessary for your project to work.</li>
                            <li class="mt-2">File: <u>package.json</u>. This file works in conjunction with the 
                                Node.js package manager (npm), it is mainly used to install and manage 
                                external Node.js modules. It also contains the necessary commands to execute
                                while the web application is being developed.</li>
                            <li class="mt-2">File: <u>tsconfig.json</u>. This file indicates that the project works
                                with TypeScript. All the necessary information for the TypeScript compiler
                                is stored here.</li>
                            <li class="mt-2">File: <u>webpack.config.js</u>. This JavaScript code file contains the
                                necessary configuration for you to work with the WebPack module wrapper.</li>
                            <li class="mt-2">File: <u>Webpack.config.vendor.js</u>. This JavaScript configuration
                                file is similar to the previous one, but it differs in that it contains
                                the necessary vendor modules such as Bootstrap, jQuery, Backbone and
                                FontAwesome</li>
                            <li class="mt-2">Folders: <u>Uploads, PDFFiles, ExcelFiles and CSVFiles</u></li>
                        </ul>
                    </li>
                    <li class="mt-2">These checkboxes belong to the Databases tab. Here you can define if
                        you want to add the <u>audit columns as Active, DateTimeCreation, DateTimeLastModification,
                        UserCreationId and UserLastModificationId</u>. You can also define if you want to <u>remove
                        existing tables, fields and stored procedures</u> during generation in the database.</li>
                    <li class="mt-2">This list contains the checkboxes to define what you want to generate in 
                        the <u>back-end</u>
                    </li>
                    <li class="mt-2">This list contains the checkboxes to define what you want to generate in 
                        the <u>front-end</u>
                    </li>
                    <li class="mt-2">Here you can define if you want to <u>remove existing files</u> during generation
                        of front-end and back-end files.
                    </li>
                    <li class="mt-2">This dropdown define the templates used in the HTML and CSS files. 
                        For the moment you can choose one, <u>Argon design (from Creative-Tim)</u>. (deprecated)
                        <div class="alert alert-info alert-dismissible fade show my-3" role="alert">
                            <span class="alert-inner--icon"><i class="ni ni-bell-55"></i></span>
                            <span class="alert-inner--text">New templates will be added</span>
                        </div>
                    </li>
                </ol>
            </blockquote>
        </div>
        <!-- Example pages -->
        <div class="card bg-default" id="5">
            <div class="card-body text-white">
                <h4 class="display-4 text-white">Example pages</h4>
                <p>
                    Here you can see an example page generated by FiyiStack. You should know that I
                    have not made any changes, I have only used the generator and added a line to
                    <u>Startup.cs</u> to indicate the Example interface so that it can be read by the
                    application. I have also added three lines in <u>webpack.config.js</u> so that you
                    can transpile the TypeScript files generated by the application. Also, I made a little change
                    in the web API of Example to allow zero values in foreign keys. That is, I have only added 4 lines
                    after generating.
                </p>
                <p>If you want to see it and upload data you must be logged in first. @Html.Raw(ViewData["LoginButton"])</p> 
                <a href="/FiyiStack/ExampleQueryPage" class="btn btn-white mb-3">Example page</a>
                <br/>
                <p>
                    Another example page created by FiyiStack is FiyiStack's blog. This page was generated
                    automatically, only changes were made to the HTML to make it look like a blog, 
                    and other changes to display comments from users who visit the page.
                </p>
                <a href="~/en/Blog" class="btn btn-white">Visit blog</a>
                <br/>
            </div>
        </div>
    </div>
  </div>
</div>
