@page "/es/FiyiStack"
@model FiyiStackWeb.Areas.FiyiStack.Products.Pages.FiyiStackModel
@{
    Layout = "_EsLayout";
}
<div class="container">
    <div class="row mt-5">
        <!-- Title -->
        <div class="col-lg-8 mx-auto text-center my-5">
            <h3 class="display-4">FiyiStack</h3>
            <h5><span class="badge badge-lg badge-success">El generador low-code C#</span></h5>
        </div>
    </div>
</div>
<div class="container">
    <div class="row">
    <div class="col mr-auto text-left mt-4">
        <div class="card bg-default">
            <div class="card-body">
                <h5 class="card-title text-white">Tabla de contenidos</h5>
                <div class="row">
                    <div class="col-8">
                        <ol class="text-white">
                            <li class="mt-2"><a class="text-white" href="#1">Formulario de login</a></li>
                            <li class="mt-2"><a class="text-white" href="#2">Formulario de proyectos</a></li>
                            <li class="mt-2"><a class="text-white" href="#3">Formulario del generador</a></li>
                            <li class="mt-2"><a class="text-white" href="#4">Formulario de la configuración</a></li>
                            <li class="mt-2"><a class="text-white" href="#5">Páginas de ejemplo</a></li>
                        </ol>
                    </div>
                    <div class="col-4 d-none d-lg-inline d-xl-inline">
                        <img src="/img/FiyiStack/FiyiStackImageTransparent.png" width="130" alt="Logo" />
                    </div>
                </div>
            </div>
        </div>
        <!-- Login form -->
        <div id="1" class="card bg-default shadow border-0">
            <img src="/img/FiyiStack/FiyiStackApp-LoginForm.png" class="card-img-top">
            <blockquote class="card-blockquote">
                <svg preserveAspectRatio="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 583 95" class="svg-bg">
                    <polygon points="0,52 583,95 0,95" class="fill-default"></polygon>
                    <polygon points="0,42 583,95 683,0 0,95" opacity=".2" class="fill-default"></polygon>
                </svg>
                <h4 class="display-4 text-white">Formulario de login</h4>
                <p class="lead text-italic text-white">
                  Aquí ingresas tus credenciales para acceder a la aplicación FiyiStack
                </p>
            </blockquote>
        </div>
        <!-- Project form -->
        <div id="2" class="card bg-default shadow border-0">
            <img src="/img/FiyiStack/FiyiStackApp-ProjectsForm.png" class="card-img-top">
            <blockquote class="card-blockquote">
                <svg preserveAspectRatio="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 583 95" class="svg-bg">
                    <polygon points="0,52 583,95 0,95" class="fill-default"></polygon>
                    <polygon points="0,42 583,95 683,0 0,95" opacity=".2" class="fill-default"></polygon>
                </svg>
                <h4 class="display-4 text-white">Formulario de proyectos</h4>
                <p class="lead text-italic text-white">
                  En este formulario puedes crear o editar tus proyectos
                </p>
                <ol class="text-white">
                    <li class="mt-2">Aquí puedes cargar tus proyectos guardados.</li>
                    <li class="mt-2">Aquí puedes editar tus proyectos colocando 
                        <span class="badge badge-danger">Project name</span>,
                        <span class="badge badge-danger">General history user</span>, usado para guardar información relacionada
                        a los requerimientos de tus clientes, y <span class="badge badge-danger">Path</span> para elegir la ubicación de tu proyecto
                    </li>
                    <li class="mt-2">Este botón es usado para crear un proyecto.
                    </li>
                    <li class="mt-2">Estos botones son para eliminar o filtrar proyectos.</li>
                </ol>
                <div class="alert alert-warning alert-dismissible fade show" role="alert">
                    <span class="alert-inner--icon"><i class="ni ni-bell-55"></i></span>
                    <span class="alert-inner--text">Recuerda que la ubicación apunte al archivo Startup.cs</span>
                </div>
            </blockquote>
        </div>
        <!-- Generator form -->
        <div id="3" class="card bg-default shadow border-0">
            <img src="/img/FiyiStack/FiyiStackApp-GeneratorForm.gif" class="card-img-top">
            <blockquote class="card-blockquote">
                <svg preserveAspectRatio="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 583 95" class="svg-bg">
                    <polygon points="0,52 583,95 0,95" class="fill-default"></polygon>
                    <polygon points="0,42 583,95 683,0 0,95" opacity=".2" class="fill-default"></polygon>
                </svg>
                <span class="badge badge-pill badge-success">Imagen GIF arriba</span>
                <h4 class="display-4 text-white">Formulario del generador</h4>
                <p class="lead text-italic text-white">
                  Aquí esta la parte principal de FiyiStack, el generador. Acá puedes elegir las bases de datos, las tablas de cada BD y las columnas de cada tabla.
                </p>
                <ol class="text-white">
                    <li class="mt-2">Acá hay 3 partes, las <span class="badge badge-danger">Databases</span> (puedes crear tanto como quieras), 
                        sus <span class="badge badge-danger">Tables</span>, y las  
                        <span class="badge badge-danger">Columns</span> de cada tabla. Puede navegar entre cada una de ellas
                        para ver su contenido creado a partir de tu diagrama de base de datos. Por ejemplo, seleccionando la opción de bases de datos despliega una lista
                        de bases de datos <span class="badge badge-danger">2</span> y su correspondiente información a la  
                        <span class="badge badge-danger">3</span> derecha.
                    </li>
                    <li class="mt-2">Aquí se muestran las bases de datos. Puedes agregar cuantas tú quieras.</li>
                    <li class="mt-2">Aquí se muestra la información de cada base de datos. El 
                        <span class="badge badge-danger">Name</span>, la opción
                        <span class="badge badge-danger">Microsoft SQL Server</span> (única opción por el momento), y
                        <span class="badge badge-danger">Connection string</span>. Como puedes ver, la base de datos es local porque tiene un (.). 
                        <div class="alert alert-warning alert-dismissible fade show my-3" role="alert">
                            <span class="alert-inner--icon"><i class="ni ni-bell-55"></i></span>
                            <span class="alert-inner--text">Recuerda, el nombre de la base de datos debe ser igual al colocado en Connection string (initial catalog property)</span>
                        </div>
                    </li>
                    <li class="mt-2">Estos botones son para eliminar y agregar bases de datos.</li>
                    <li class="mt-2">Este botón es para ingresar a la configuración del generador.</li>
                    <li class="mt-2">Este botón es para generar el código de las tablas seleccionadas
                        <span class="badge badge-danger">7</span>.
                    </li>
                    <li class="mt-2">Aquí hay una lista de las tablas correspondientes a la base de datos seleccionada. 
                        Como puedes ver, cada tabla tiene un esquema como <u>dbo</u>, un área
                        <u>BasicCore</u> y el nombre de la tabla como <u>Failure</u>: 
                        <u>[dbo].[BasicCore.Failure]</u>, para dar un ejemplo.
                    </li>
                    <li class="mt-2">Aquí se muestran los datos de la tabla seleccionada. Por ejemplo, si selecciono
                        <u>[dbo].[BasicCore.Failure]</u>, la tabla <span class="badge badge-danger">Name</span> 
                        será Failure, el <span class="badge badge-danger">esquema de base de datos</span> será dbo, y el
                        <span class="badge badge-danger">Área</span> será BasicCore. También puedes
                        agregar la <span class="badge badge-danger">Version</span> para tener diferentes versiones de la tabla, yo por ejemplo puse 1.
                         <div class="alert alert-info alert-dismissible fade show my-3" role="alert">
                            <span class="alert-inner--icon"><i class="ni ni-bell-55"></i></span>
                            <span class="alert-inner--text">Hay muchas cantidades de esquemas, la que se recomienda es dbo (database owner)</span>
                        </div>
                        <div class="alert alert-info alert-dismissible fade show my-3" role="alert">
                            <span class="alert-inner--icon"><i class="ni ni-bell-55"></i></span>
                            <span class="alert-inner--text">Coloca un nombre, un área, y una versión sin espacios o carácteres especiales, solo texto y números, 
                                y si puedes coloca la primer letra en mayúscula.
                        Es una buena práctica</span>
                        </div>
                    </li>
                    <li class="mt-2">Estos botones son para remover tablas, seleccionar todas las tablas y para agregar nuevas tablas.
                    </li>
                    <li class="mt-2">Una vez seleccionada la tabla puedes ir al tab de columnas para agregar nuevas columnas a la tabla seleccionada.
                    </li>
                    <li class="mt-2">Aquí se muestra la configuración de cada columna. Si selecciono la columna Message, 
                        va a mostrar Message como <span class="badge badge-danger">Name</span>, la opción 
                        <span class="badge badge-danger">Nullable</span> indica si la columna acepta valores nulos o no,
                        un <span class="badge badge-danger">History user</span> 
                        indicando para que sirve la columna, y un <span class="badge badge-danger">Data type</span> 
                        <span class="badge badge-danger">13</span>. Por ejemplo, Message tiene el data type de tipo Text: TextArea,
                        esta opción muestra más información a la derecha, <span class="badge badge-danger">Min</span>  
                        y <span class="badge badge-danger">Max</span> números de carácteres que la columna permite, y
                        también un campo para expresiones regulares, <span class="badge badge-danger">Regex</span> , para filtrar que 
                        carácteres son permitidos en la columna.
                        <div class="alert alert-info alert-dismissible fade show my-3" role="alert">
                            <span class="alert-inner--icon"><i class="ni ni-bell-55"></i></span>
                            <span class="alert-inner--text">Aquí es lo mismo: Coloca un nombre sin espacios o caracteres especiales,
                            solo texto y números. Y si puedes, coloca la primer letra en mayúscula.
                            Es una buena práctica.</span>
                        </div>
                    </li>
                    <li class="mt-2">Estos botones son para remover columnas, seleccionar todas las columnas, 
                        y para agregar una nueva columna.
                    </li>
                    <li class="mt-2">Este listado de opciones te permite agregar columnas con diferentes tipos de datos, por ejemplo,
                        puedes agregar:
                        <ul>
                            <li class="mt-2">Boolean. Para guardar valores de 0 o 1. Usado para columnas como IsActive, 
                                IsOnline o WantDiscount.</li>

                            <li class="mt-4">Date and time</li>
                            <li class="mt-2">Time</li>

                            <li class="mt-4">Decimal</li>
                            <li class="mt-2">Integer</li>

                            <li class="mt-4">Primary Key. Esta es para la llave primaria de cada tabla. Cada tabla tiene
                                una llave primaria y no acepta 0 o valores nulos.
                            </li>
                            <li class="mt-2">Foreign keys con listas desplegables</li>
                            <li class="mt-2">Foreign keys con opciones</li>

                            <li class="mt-4">Text: Basic</li>
                            <li class="mt-2">Text: Email</li>
                            <li class="mt-2">Text: File. Las direcciones de los archivos son guardadas como texto en la base de datos.</li>
                            <li class="mt-2">Text: Hex colour</li>
                            <li class="mt-2">Text: Password</li>
                            <li class="mt-2">Text: Phone number</li>
                            <li class="mt-2">Text: Tag. Un ejemplo de tag puede ser Buenos Aires, Roma, Paris o Londres</li>
                            <li class="mt-2">Text: Text Area</li>
                            <li class="mt-2">Text: Text Editor</li>
                            <li class="mt-2">Text: URL</li>
                            
                        </ul>
                    </li>
                </ol>
            </blockquote>
        </div>
        <!-- Configuration form -->
        <div id="4" class="card bg-default shadow border-0">
            <img src="/img/FiyiStack/FiyiStackApp-ConfigurationForm.gif" class="card-img-top">
            <blockquote class="card-blockquote">
                <svg preserveAspectRatio="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 583 95" class="svg-bg">
                    <polygon points="0,52 583,95 0,95" class="fill-default"></polygon>
                    <polygon points="0,42 583,95 683,0 0,95" opacity=".2" class="fill-default"></polygon>
                </svg>
                <span class="badge badge-pill badge-success">Imagen GIF arriba</span>
                <h4 class="display-4 text-white">Formulario de configuración</h4>
                <p class="lead text-italic text-white">
                  Aquí puedes configurar el generador
                </p>
                <ol class="text-white">
                    <li class="mt-2">Aquí hay 3 opciones para configurar el generador, la primera es
                        the <span class="badge badge-danger">database</span>, la segunda son los
                        <span class="badge badge-danger">paths</span> de los archivos, and the third is 
                        the <span class="badge badge-danger">interface</span> with which we generate.
                    </li>
                    <li class="mt-2">This edit button is to save the selected configuration.</li>
                    <li class="mt-2">With this button you can create the necessary files and folders 
                        for the project:
                        <ul>
                            <li class="mt-2">File: <u>Startup.cs</u>. This file is in charge of starting your project,
                                it loads the configurations and services necessary for your project to work.</li>
                            <li class="mt-2">File: <u>package.json</u>. This file works in conjunction with the 
                                Node.js package manager (npm), it is mainly used to install and manage 
                                external Node.js modules. It also contains the necessary commands to execute
                                while the web application is being developed.</li>
                            <li class="mt-2">File: <u>tsconfig.json</u>. This file indicates that the project works
                                with TypeScript. All the necessary information for the TypeScript compiler
                                is stored here.</li>
                            <li class="mt-2">File: <u>webpack.config.js</u>. This JavaScript code file contains the
                                necessary configuration for you to work with the WebPack module wrapper.</li>
                            <li class="mt-2">File: <u>Webpack.config.vendor.js</u>. This JavaScript configuration
                                file is similar to the previous one, but it differs in that it contains
                                the necessary vendor modules such as Bootstrap, jQuery, Backbone and
                                FontAwesome</li>
                            <li class="mt-2">Folders: <u>Uploads, PDFFiles, ExcelFiles and CSVFiles</u></li>
                        </ul>
                    </li>
                    <li class="mt-2">These checkboxes belong to the Databases tab. Here you can define if
                        you want to add the <u>audit columns as Active, DateTimeCreation, DateTimeLastModification,
                        UserCreationId and UserLastModificationId</u>. You can also define if you want to <u>remove
                        existing tables, fields and stored procedures</u> during generation in the database.</li>
                    <li class="mt-2">This list contains the checkboxes to define what you want to generate in 
                        the <u>back-end</u>
                    </li>
                    <li class="mt-2">This list contains the checkboxes to define what you want to generate in 
                        the <u>front-end</u>
                    </li>
                    <li class="mt-2">Here you can define if you want to <u>remove existing files</u> during generation
                        of front-end and back-end files.
                    </li>
                    <li class="mt-2">This dropdown define the templates used in the HTML and CSS files. 
                        For the moment you can choose one, <u>Argon design (from Creative-Tim)</u>.
                        <div class="alert alert-info alert-dismissible fade show my-3" role="alert">
                            <span class="alert-inner--icon"><i class="ni ni-bell-55"></i></span>
                            <span class="alert-inner--text">New templates will be added</span>
                        </div>
                    </li>
                </ol>
            </blockquote>
        </div>
        <!-- Example pages -->
        <div class="card bg-default" id="5">
            <div class="card-body text-white">
                <h4 class="display-4 text-white">Example pages</h4>
                <p>
                    Here you can see an example page generated by FiyiStack. You should know that I
                    have not made any changes, I have only used the generator and added a line to
                    <u>Startup.cs</u> to indicate the Example interface so that it can be read by the
                    application. I have also added two lines in <u>webpack.config.js</u> so that you
                    can transpile the TypeScript files generated by the application. Also, I made a little change
                    in the web API of Example to allow zero values in foreign keys. That is, I have only added 3 lines
                    after generating.
                </p>
                <p>If you want to see it and upload data you must be logged in first. @Html.Raw(ViewData["LoginButton"])</p> 
                <a href="/FiyiStack/ExampleQueryPage" class="btn btn-white mb-3">Example page</a>
                <br/>
                <p>
                    Another example page created by FiyiStack is FiyiStack's blog. This page was generated
                    automatically, only changes were made to the HTML to make it look like a blog, 
                    and other changes to display comments from users who visit the page.
                </p>
                <a href="/Blog" class="btn btn-white">Visit blog</a>
                <br/>
            </div>
        </div>
    </div>
  </div>
</div>
